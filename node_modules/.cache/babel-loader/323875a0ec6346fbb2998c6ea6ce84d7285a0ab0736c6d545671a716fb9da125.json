{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/untitled folder 10/src/components/LanguageSwitcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSwitcher = () => {\n  _s();\n  const {\n    language,\n    changeLanguage\n  } = useLanguage();\n  const [isOpen, setIsOpen] = useState(false);\n  const languages = [{\n    code: 'uk',\n    name: 'Ð£ÐšÐ ',\n    flag: 'ðŸ‡ºðŸ‡¦'\n  }, {\n    code: 'ru',\n    name: 'Ð Ð£Ð¡',\n    flag: 'ðŸ‡·ðŸ‡º'\n  }, {\n    code: 'en',\n    name: 'ENG',\n    flag: 'ðŸ‡ºðŸ‡¸'\n  }];\n  const currentLanguage = languages.find(lang => lang.code === language);\n  const handleLanguageChange = langCode => {\n    changeLanguage(langCode);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-switcher\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"language-btn\",\n      onClick: () => setIsOpen(!isOpen),\n      onBlur: () => setTimeout(() => setIsOpen(false), 200),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"language-flag\",\n        children: currentLanguage === null || currentLanguage === void 0 ? void 0 : currentLanguage.flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"language-name\",\n        children: currentLanguage === null || currentLanguage === void 0 ? void 0 : currentLanguage.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `language-arrow ${isOpen ? 'open' : ''}`,\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-dropdown\",\n      children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `language-option ${language === lang.code ? 'active' : ''}`,\n        onClick: () => handleLanguageChange(lang.code),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-flag\",\n          children: lang.flag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-name\",\n          children: lang.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, lang.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSwitcher, \"fBq0hCho2h4TP22KmmlL5DMuoaY=\", false, function () {\n  return [useLanguage];\n});\n_c = LanguageSwitcher;\nexport default LanguageSwitcher;\nvar _c;\n$RefreshReg$(_c, \"LanguageSwitcher\");","map":{"version":3,"names":["React","useState","useLanguage","jsxDEV","_jsxDEV","LanguageSwitcher","_s","language","changeLanguage","isOpen","setIsOpen","languages","code","name","flag","currentLanguage","find","lang","handleLanguageChange","langCode","className","children","onClick","onBlur","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/untitled folder 10/src/components/LanguageSwitcher.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\n\nconst LanguageSwitcher = () => {\n  const { language, changeLanguage } = useLanguage();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const languages = [\n    { code: 'uk', name: 'Ð£ÐšÐ ', flag: 'ðŸ‡ºðŸ‡¦' },\n    { code: 'ru', name: 'Ð Ð£Ð¡', flag: 'ðŸ‡·ðŸ‡º' },\n    { code: 'en', name: 'ENG', flag: 'ðŸ‡ºðŸ‡¸' }\n  ];\n\n  const currentLanguage = languages.find(lang => lang.code === language);\n\n  const handleLanguageChange = (langCode) => {\n    changeLanguage(langCode);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"language-switcher\">\n      <button \n        className=\"language-btn\"\n        onClick={() => setIsOpen(!isOpen)}\n        onBlur={() => setTimeout(() => setIsOpen(false), 200)}\n      >\n        <span className=\"language-flag\">{currentLanguage?.flag}</span>\n        <span className=\"language-name\">{currentLanguage?.name}</span>\n        <span className={`language-arrow ${isOpen ? 'open' : ''}`}>â–¼</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"language-dropdown\">\n          {languages.map((lang) => (\n            <button\n              key={lang.code}\n              className={`language-option ${language === lang.code ? 'active' : ''}`}\n              onClick={() => handleLanguageChange(lang.code)}\n            >\n              <span className=\"language-flag\">{lang.flag}</span>\n              <span className=\"language-name\">{lang.name}</span>\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageSwitcher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAGN,WAAW,CAAC,CAAC;EAClD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,EACzC;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,EACzC;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,CAC1C;EAED,MAAMC,eAAe,GAAGJ,SAAS,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,KAAKL,QAAQ,CAAC;EAEtE,MAAMW,oBAAoB,GAAIC,QAAQ,IAAK;IACzCX,cAAc,CAACW,QAAQ,CAAC;IACxBT,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCjB,OAAA;MACEgB,SAAS,EAAC,cAAc;MACxBE,OAAO,EAAEA,CAAA,KAAMZ,SAAS,CAAC,CAACD,MAAM,CAAE;MAClCc,MAAM,EAAEA,CAAA,KAAMC,UAAU,CAAC,MAAMd,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,CAAE;MAAAW,QAAA,gBAEtDjB,OAAA;QAAMgB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEN,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAED;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9DxB,OAAA;QAAMgB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEN,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEF;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9DxB,OAAA;QAAMgB,SAAS,EAAE,kBAAkBX,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;QAAAY,QAAA,EAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EAERnB,MAAM,iBACLL,OAAA;MAAKgB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BV,SAAS,CAACkB,GAAG,CAAEZ,IAAI,iBAClBb,OAAA;QAEEgB,SAAS,EAAE,mBAAmBb,QAAQ,KAAKU,IAAI,CAACL,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QACvEU,OAAO,EAAEA,CAAA,KAAMJ,oBAAoB,CAACD,IAAI,CAACL,IAAI,CAAE;QAAAS,QAAA,gBAE/CjB,OAAA;UAAMgB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEJ,IAAI,CAACH;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDxB,OAAA;UAAMgB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEJ,IAAI,CAACJ;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAL7CX,IAAI,CAACL,IAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7CID,gBAAgB;EAAA,QACiBH,WAAW;AAAA;AAAA4B,EAAA,GAD5CzB,gBAAgB;AA+CtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ScrollReveal=_ref=>{let{children,className='',delay=0}=_ref;const elementRef=useRef(null);useEffect(()=>{const observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){setTimeout(()=>{entry.target.classList.add('active');},delay);}});},{threshold:0.1,rootMargin:'0px 0px -50px 0px'});if(elementRef.current){observer.observe(elementRef.current);}return()=>{if(elementRef.current){observer.unobserve(elementRef.current);}};},[delay]);return/*#__PURE__*/_jsx(\"div\",{ref:elementRef,className:className,children:children});};export default ScrollReveal;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","ScrollReveal","_ref","children","className","delay","elementRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","setTimeout","target","classList","add","threshold","rootMargin","current","observe","unobserve","ref"],"sources":["/Users/mac/Desktop/Beta-Studia/src/components/ScrollReveal.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst ScrollReveal = ({ children, className = '', delay = 0 }) => {\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setTimeout(() => {\n              entry.target.classList.add('active');\n            }, delay);\n          }\n        });\n      },\n      {\n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n\n    return () => {\n      if (elementRef.current) {\n        observer.unobserve(elementRef.current);\n      }\n    };\n  }, [delay]);\n\n  return (\n    <div ref={elementRef} className={className}>\n      {children}\n    </div>\n  );\n};\n\nexport default ScrollReveal;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAA6C,IAA5C,CAAEC,QAAQ,CAAEC,SAAS,CAAG,EAAE,CAAEC,KAAK,CAAG,CAAE,CAAC,CAAAH,IAAA,CAC3D,KAAM,CAAAI,UAAU,CAAGR,MAAM,CAAC,IAAI,CAAC,CAE/BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CACtCC,OAAO,EAAK,CACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,EAAK,CACzB,GAAIA,KAAK,CAACC,cAAc,CAAE,CACxBC,UAAU,CAAC,IAAM,CACfF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC,CACtC,CAAC,CAAEX,KAAK,CAAC,CACX,CACF,CAAC,CAAC,CACJ,CAAC,CACD,CACEY,SAAS,CAAE,GAAG,CACdC,UAAU,CAAE,mBACd,CACF,CAAC,CAED,GAAIZ,UAAU,CAACa,OAAO,CAAE,CACtBZ,QAAQ,CAACa,OAAO,CAACd,UAAU,CAACa,OAAO,CAAC,CACtC,CAEA,MAAO,IAAM,CACX,GAAIb,UAAU,CAACa,OAAO,CAAE,CACtBZ,QAAQ,CAACc,SAAS,CAACf,UAAU,CAACa,OAAO,CAAC,CACxC,CACF,CAAC,CACH,CAAC,CAAE,CAACd,KAAK,CAAC,CAAC,CAEX,mBACEL,IAAA,QAAKsB,GAAG,CAAEhB,UAAW,CAACF,SAAS,CAAEA,SAAU,CAAAD,QAAA,CACxCA,QAAQ,CACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/untitled folder 10/src/contexts/LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [language, setLanguage] = useState(() => {\n    // Получаем сохраненный язык из localStorage или устанавливаем по умолчанию\n    const savedLanguage = localStorage.getItem('language');\n    return savedLanguage || 'uk';\n  });\n\n  // Сохраняем выбранный язык в localStorage\n  useEffect(() => {\n    localStorage.setItem('language', language);\n  }, [language]);\n  const changeLanguage = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  const value = {\n    language,\n    changeLanguage\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"Vie8PariJS8EFyv7FhrOdcYT34s=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","context","Error","LanguageProvider","children","_s2","language","setLanguage","savedLanguage","localStorage","getItem","setItem","changeLanguage","newLanguage","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/untitled folder 10/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState(() => {\n    // Получаем сохраненный язык из localStorage или устанавливаем по умолчанию\n    const savedLanguage = localStorage.getItem('language');\n    return savedLanguage || 'uk';\n  });\n\n  // Сохраняем выбранный язык в localStorage\n  useEffect(() => {\n    localStorage.setItem('language', language);\n  }, [language]);\n\n  const changeLanguage = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  const value = {\n    language,\n    changeLanguage,\n  };\n\n  return (\n    <LanguageContext.Provider value={value}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGR,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMc,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,OAAOF,aAAa,IAAI,IAAI;EAC9B,CAAC,CAAC;;EAEF;EACAb,SAAS,CAAC,MAAM;IACdc,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAAC;EAC5C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMM,cAAc,GAAIC,WAAW,IAAK;IACtCN,WAAW,CAACM,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMC,KAAK,GAAG;IACZR,QAAQ;IACRM;EACF,CAAC;EAED,oBACEf,OAAA,CAACC,eAAe,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAV,QAAA,EACpCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACd,GAAA,CA1BWF,gBAAgB;AAAAiB,EAAA,GAAhBjB,gBAAgB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/untitled folder 10/src/components/ParticleSystem.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleSystem = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationId;\n\n    // Настройка canvas\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Массив частиц\n    const particles = [];\n    const particleCount = 50;\n\n    // Класс частицы\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.vx = (Math.random() - 0.5) * 2;\n        this.vy = (Math.random() - 0.5) * 2;\n        this.size = Math.random() * 3 + 1;\n        this.opacity = Math.random() * 0.5 + 0.2;\n        this.color = `hsl(${200 + Math.random() * 60}, 70%, 60%)`;\n        this.life = 1;\n        this.decay = Math.random() * 0.02 + 0.005;\n      }\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n        this.life -= this.decay;\n        this.opacity = this.life * 0.7;\n\n        // Отскок от краев\n        if (this.x < 0 || this.x > canvas.width) this.vx *= -1;\n        if (this.y < 0 || this.y > canvas.height) this.vy *= -1;\n\n        // Перерождение\n        if (this.life <= 0) {\n          this.x = Math.random() * canvas.width;\n          this.y = Math.random() * canvas.height;\n          this.life = 1;\n        }\n      }\n      draw() {\n        ctx.save();\n        ctx.globalAlpha = this.opacity;\n        ctx.fillStyle = this.color;\n        ctx.shadowBlur = 10;\n        ctx.shadowColor = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    // Создание частиц\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle());\n    }\n\n    // Анимация\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Обновление и отрисовка частиц\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Соединение близких частиц\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 100) {\n            ctx.save();\n            ctx.globalAlpha = (100 - distance) / 100 * 0.2;\n            ctx.strokeStyle = '#0066ff';\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.stroke();\n            ctx.restore();\n          }\n        }\n      }\n      animationId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"particle-canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticleSystem, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleSystem;\nexport default ParticleSystem;\nvar _c;\n$RefreshReg$(_c, \"ParticleSystem\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ParticleSystem","_s","canvasRef","canvas","current","ctx","getContext","animationId","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","particles","particleCount","Particle","constructor","x","Math","random","y","vx","vy","size","opacity","color","life","decay","update","draw","save","globalAlpha","fillStyle","shadowBlur","shadowColor","beginPath","arc","PI","fill","restore","i","push","animate","clearRect","forEach","particle","length","j","dx","dy","distance","sqrt","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame","cancelAnimationFrame","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/untitled folder 10/src/components/ParticleSystem.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst ParticleSystem = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationId;\n\n    // Настройка canvas\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Массив частиц\n    const particles = [];\n    const particleCount = 50;\n\n    // Класс частицы\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.vx = (Math.random() - 0.5) * 2;\n        this.vy = (Math.random() - 0.5) * 2;\n        this.size = Math.random() * 3 + 1;\n        this.opacity = Math.random() * 0.5 + 0.2;\n        this.color = `hsl(${200 + Math.random() * 60}, 70%, 60%)`;\n        this.life = 1;\n        this.decay = Math.random() * 0.02 + 0.005;\n      }\n\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n        this.life -= this.decay;\n        this.opacity = this.life * 0.7;\n\n        // Отскок от краев\n        if (this.x < 0 || this.x > canvas.width) this.vx *= -1;\n        if (this.y < 0 || this.y > canvas.height) this.vy *= -1;\n\n        // Перерождение\n        if (this.life <= 0) {\n          this.x = Math.random() * canvas.width;\n          this.y = Math.random() * canvas.height;\n          this.life = 1;\n        }\n      }\n\n      draw() {\n        ctx.save();\n        ctx.globalAlpha = this.opacity;\n        ctx.fillStyle = this.color;\n        ctx.shadowBlur = 10;\n        ctx.shadowColor = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    // Создание частиц\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle());\n    }\n\n    // Анимация\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Обновление и отрисовка частиц\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Соединение близких частиц\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < 100) {\n            ctx.save();\n            ctx.globalAlpha = (100 - distance) / 100 * 0.2;\n            ctx.strokeStyle = '#0066ff';\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.stroke();\n            ctx.restore();\n          }\n        }\n      }\n\n      animationId = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} className=\"particle-canvas\" />;\n};\n\nexport default ParticleSystem;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}